{"version":3,"sources":["../../src/server/utils.js"],"names":["asyncMiddleware","req","res","next","Promise","resolve","fn","catch","e","statusCode","cleanSession","service","path","includes","session","redmine_auth","gitlab_token","github_auth","uniqFilterAccordingToProp","prop","ele","i","arr","map","indexOf"],"mappings":";;;;;AAAO,IAAMA,4CAAkB,SAAlBA,eAAkB;AAAA,SAAM,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvDC,YAAQC,OAAR,CAAgBC,GAAGL,GAAH,EAAQC,GAAR,EAAaC,IAAb,CAAhB,EACGI,KADH,CACS,aAAK;AACV,UAAIC,KAAKA,EAAEC,UAAF,KAAiB,GAA1B,EAA+B;AAC7BC,qBAAaC,OAAb,EAAsBV,GAAtB;AACD;AACDE;AACD,KANH;AAOD,GAR8B;AAAA,CAAxB;;AAUA,IAAMO,sCAAe,SAAfA,YAAe,CAACT,GAAD,EAAS;AACnC,MAAIA,IAAIW,IAAJ,CAASC,QAAT,CAAkB,SAAlB,CAAJ,EAAkC;AAChCZ,QAAIa,OAAJ,CAAYC,YAAZ,GAA2B,IAA3B;AACD;;AAED,MAAId,IAAIW,IAAJ,CAASC,QAAT,CAAkB,iBAAlB,CAAJ,EAA0C;AACxCZ,QAAIa,OAAJ,CAAYE,YAAZ,GAA2B,IAA3B;AACD;;AAED,MAAIf,IAAIW,IAAJ,CAASC,QAAT,CAAkB,QAAlB,CAAJ,EAAiC;AAC/BZ,QAAIa,OAAJ,CAAYG,WAAZ,GAA0B,IAA1B;AACD;AACF,CAZM;;AAcA,IAAMC,gEAA4B,SAA5BA,yBAA4B,CAAUC,IAAV,EAAgB;AACvD,MAAIA,IAAJ,EAAU;AACN,WAAO,UAACC,GAAD,EAAMC,CAAN,EAASC,GAAT;AAAA,aAAiBA,IAAIC,GAAJ,CAAQ;AAAA,eAAOH,IAAID,IAAJ,CAAP;AAAA,OAAR,EAA0BK,OAA1B,CAAkCJ,IAAID,IAAJ,CAAlC,MAAiDE,CAAlE;AAAA,KAAP;AACH,GAFD,MAEO;AACH,WAAO,UAACD,GAAD,EAAMC,CAAN,EAASC,GAAT;AAAA,aAAiBA,IAAIE,OAAJ,CAAYJ,GAAZ,MAAqBC,CAAtC;AAAA,KAAP;AACH;AACF,CANM","file":"utils.js","sourcesContent":["export const asyncMiddleware = fn => (req, res, next) => {\n  Promise.resolve(fn(req, res, next))\n    .catch(e => {\n      if (e && e.statusCode === 401) {\n        cleanSession(service, req)\n      }\n      next()\n    })\n}\n\nexport const cleanSession = (req) => {\n  if (req.path.includes('redmine')) {\n    req.session.redmine_auth = null\n  }\n\n  if (req.path.includes('gitlab-external')) {\n    req.session.gitlab_token = null\n  }\n\n  if (req.path.includes('github')) {\n    req.session.github_auth = null\n  }\n}\n\nexport const uniqFilterAccordingToProp = function (prop) {\n  if (prop) {\n      return (ele, i, arr) => arr.map(ele => ele[prop]).indexOf(ele[prop]) === i\n  } else {\n      return (ele, i, arr) => arr.indexOf(ele) === i\n  }\n}\n"]}